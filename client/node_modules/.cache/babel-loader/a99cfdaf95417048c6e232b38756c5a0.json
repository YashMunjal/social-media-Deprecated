{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\chat app\\\\social media-full\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\chat app\\\\social media-full\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\chat app\\\\social media-full\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{Link,withRouter}from'react-router-dom';import{connect}from'react-redux';import{addExperience}from'../../actions/profile';var AddExperience=function AddExperience(_ref){var addExperience=_ref.addExperience,history=_ref.history;var _useState=useState({company:'',title:'',location:'',from:'',to:'',current:false,description:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),toDateDisabled=_useState4[0],toggleDisabled=_useState4[1];var company=formData.company,title=formData.title,location=formData.location,from=formData.from,to=formData.to,current=formData.current,description=formData.description;var _onChange=function onChange(e){return setFormData(_objectSpread({},formData,_defineProperty({},e.target.name,e.target.value)));};return React.createElement(Fragment,null,React.createElement(\"h1\",{className:\"large text-primary\"},\"Add An Experience\"),React.createElement(\"p\",{className:\"lead\"},React.createElement(\"i\",{className:\"fas fa-code-branch\"}),\" Add any developer/programming positions that you have had in the past\"),React.createElement(\"small\",null,\"* = required field\"),React.createElement(\"form\",{className:\"form\",onSubmit:function onSubmit(e){e.preventDefault();addExperience(formData,history);}},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"* Job Title\",name:\"title\",value:title,onChange:function onChange(e){return _onChange(e);},required:true})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"* Company\",name:\"company\",value:company,onChange:function onChange(e){return _onChange(e);},required:true})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"Location\",name:\"location\",value:location,onChange:function onChange(e){return _onChange(e);}})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"h4\",null,\"From Date\"),React.createElement(\"input\",{type:\"date\",name:\"from\",value:from,onChange:function onChange(e){return _onChange(e);}})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"p\",null,React.createElement(\"input\",{type:\"checkbox\",name:\"current\",checked:current,value:current,onChange:function onChange(){setFormData(_objectSpread({},formData,{current:!current}));toggleDisabled(!toDateDisabled);}}),' ',\"Current Job\")),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"h4\",null,\"To Date\"),React.createElement(\"input\",{type:\"date\",name:\"to\",value:to,onChange:function onChange(e){return _onChange(e);},disabled:toDateDisabled?'disabled':''})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"textarea\",{name:\"description\",cols:\"30\",rows:\"5\",placeholder:\"Job Description\",value:description,onChange:function onChange(e){return _onChange(e);}})),React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary my-1\"}),React.createElement(Link,{className:\"btn btn-light my-1\",to:\"/dashboard\"},\"Go Back\")));};export default connect(null,{addExperience:addExperience})(withRouter(AddExperience));","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/chat app/social media-full/client/src/components/profile-forms/AddExperience.js"],"names":["React","Fragment","useState","Link","withRouter","connect","addExperience","AddExperience","history","company","title","location","from","to","current","description","formData","setFormData","toDateDisabled","toggleDisabled","onChange","e","target","name","value","preventDefault"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { company, title, location, from, to, current, description } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add An Experience</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch' /> Add any developer/programming positions\n        that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={e => {\n          e.preventDefault();\n          addExperience(formData, history);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{' '}\n            Current Job\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={e => onChange(e)}\n            disabled={toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n            value={description}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addExperience }\n)(withRouter(AddExperience));\n"]},"metadata":{},"sourceType":"module"}