{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR } from './type'; //Get the current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/chat app/social media-full/frontend/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","UPDATE_PROFILE"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {GET_PROFILE,PROFILE_ERROR} from './type';\r\n\r\n\r\n//Get the current users profile\r\n\r\nexport const getCurrentProfile = ()=>async dispatch =>{\r\n    try {\r\n        const res= await axios.get('/api/profile/me');\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText, status:err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n//Create or update profile\r\nexport const createProfile = (\r\n    formData,\r\n    history,\r\n    edit = false\r\n  ) => async dispatch => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n  \r\n      const res = await axios.post('/api/profile', formData, config);\r\n  \r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n  \r\n      dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n  \r\n      if (!edit) {\r\n        history.push('/dashboard');\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n  \r\n      if (errors) {\r\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n  \r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  //Add experience\r\n  export const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n  \r\n      const res = await axios.put('/api/profile/experience', formData, config);\r\n  \r\n      dispatch({\r\n        type: UPDATE_PROFILE,\r\n        payload: res.data\r\n      });\r\n  \r\n      dispatch(setAlert('Experience Added', 'success'));\r\n  \r\n      history.push('/dashboard');\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n  \r\n      if (errors) {\r\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n  \r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}