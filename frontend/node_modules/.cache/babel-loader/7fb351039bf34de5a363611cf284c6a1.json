{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\chat app\\\\social media-full\\\\frontend\\\\src\\\\components\\\\routing\\\\privateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport auth from '../../reducers/auth';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => !auth.isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 76\n    }\n  }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 114\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}));\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/chat app/social media-full/frontend/src/components/routing/privateRoute.js"],"names":["React","PropTypes","connect","Route","Redirect","auth","PrivateRoute","component","Component","isAuthenticated","loading","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBH,EAAAA,IAAI,EAAE;AAAEI,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAA9B;AAA4D,KAAGC;AAA/D,CAAD,kBACjB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAAI,CAACP,IAAI,CAACI,eAAN,IAAyB,CAACC,OAA1B,gBAAqC,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArC,gBAA2E,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAKAN,YAAY,CAACO,SAAb,GAAyB;AACrBR,EAAAA,IAAI,EAAEJ,SAAS,CAACa,MAAV,CAAiBC;AADF,CAAzB;;AAGA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADkB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACc,eAAD,CAAP,CAAyBV,YAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport auth from '../../reducers/auth'\r\n\r\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\r\n    <Route {...rest} render={props => !auth.isAuthenticated && !loading ? (<Redirect to='/login'></Redirect>) : (<Component {...props}></Component>)} />\r\n\r\n)\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}